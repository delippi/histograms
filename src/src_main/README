This is the help document for running and creating bufr histogram for hrlyGDAS project.

This is a list and description of each file:
 - bufrhist.f90        : main Fortran source code for inventorying the short/long/ops bufr files.
 - bufrhist.ksh        : wrapper for running all of the python utilities bufrhist_*.py. 
 - bufrhist_total.py   : py utility for reading the diag files generated by bufrhist.x (aggregated)
 - bufrhist_all.py     : py utility for reading the diag files generated by bufrhist.x (all separate)
 - bufrhist_prep.py    : py utility for reading the diag files generated by bufrhist.x (only prepbufr)
 - bufrhist_nonprep.py : py utility for reading the diag files generated by bufrhist.x (only nonprepbufr)
 - bufrhist.x          : Fortran executable.
 - kinds.f90           : supplementary Fortran source code for bufrhist.f90.
 - Makefile            : makefile. 
 - namelist            : template namelist used by bufrhist.ksh and setup.ksh.
 - run.ksh             : wrapper to compile and run setup.ksh over a given start/end time.
 - setup.ksh           : template batch job which runs the executable.


STEPS:
1. Have saved the short/long/ops bufr files.
2. Edit "run.ksh" with the desired "start" and "num_days". Setting this to
   start=2019070500 and num_days=3.0 will generate diagnostic files for
   2019070500, 2019070506, 2019070512, ..., and 2019070718 for each of the 
   bufr window lengths. Number of jobs will be 3 * (4*num_days). Usually takes
   about 10 min or less to complete each hour.
3. Edit "bufrhist.ksh" with the desired "starts" and "num_days". Setting this to
   starts="2019070500 2019070506 2019070512 2019070518" and num_days=6.00 will
   generate four plots (one for each start in starts) with 7-days (0-6days) worth
   of data. The plots are saved in the working directory 
   (e.g., inventory_2019070518_to_2019071118_18z).


ADDITIONAL INFORMATION:
1. "run.ksh" create directories for each time "yyyymmddhh" with three subdirectories "short", "long",
    and "ops" for which to use as working directories.
2. The executable is link to the working directory, and the template files, "namelist_template" 
   and "setup_template.ksh" are copied to these working directories and modified inplace using 
   the stream editor and then submitted to the batch system. This is all done inside "run.ksh". 
3. The diagnostic file that is genrated is labeled with "inventory" in the working directories 
   (e.g., long_2019070400_inventory). These files are read by the python utility.
4. There are additional "inventory" files labeled based on the bufr type for an itemized view of
   the counts for each bufr type.
